# SPDX-FileCopyrightText: 2022 Maxwell G <gotmax@e.email>
# SPDX-License-Identifier: Unlicense

[releases.rawhide]
matcher = "^(rawhide)$"
# These two fields are unused for now
koschei_collection = "Fedora Rawhide"
copr_chroot_fmt = "fedora-rawhide-{arch}"

# `fedrq CMD -b rawhide (-r base)` enables the `rawhide` and `rawhide-source`
# repos
# -r base is the implicit default
defs.base = ["rawhide", "rawhide-source"]
# `fedrq CMD -b rawhide -r buildroot` enables the `fedrq-koji-rawhide` and
# `fedrq-koji-rawhide-source` repositories.
defs.buildroot = ["fedrq-koji-rawhide", "fedrq-koji-rawhide-source"]
# fedrq will search for the repository names in the following
# paths if they're not available in your system configuration.
defpaths = ["rawhide-buildroot.repo", "fedora-rawhide.repo"]
system_repos = true

[releases.branched]
# e.g. f36, f37
matcher = "^f(\\d{2})$"
koschei_collection = "Fedora {version}"
copr_chroot_fmt = "fedora-{version}-{arch}"

defs.base = ["fedora", "fedora-source", "updates", "updates-source"]
defs.release = ["fedora", "fedora-source"]
defs.updates = ["updates", "updates-source"]
defs.testing =  ["fedora", "fedora-source", "updates", "updates-source",
                 "updates-testing", "updates-testing-source"]
defs.testing-only =  ["updates-testing", "updates-testing-source"]

defpaths = ["fedora.repo", "fedora-updates.repo", "fedora-updates-testing.repo"]

[releases.epel]
# e.g. epel8, epel9, epel10
matcher = "^epel(\\d{1,2})$"
koschei_collection = "EPEL {version}"
copr_chroot_fmt = "epel-{version}-{arch}"
defpaths = ["epel.repo"]
system_repos = false

defs.base = ["epel", "epel-source"]
defs.testing = ["epel", "epel-source",
                "epel-testing", "epel-testing-source"]
defs.testing-only = ["epel-testing", "epel-testing-source"]

[releases.epel_next]
matcher = "^epel(\\d{1,2})-next$"
koschei_collection = "EPEL {version}"
copr_chroot_fmt = "centos-stream+epel-next-epel-{version}-{arch}"
defpaths = ["epel.repo"]
system_repos = false

defs.base = ["epel", "epel-source",
             "epel-next", "epel-next-source"]

defs.testing = ["epel", "epel-source",
                "epel-next", "epel-next-source",
                "epel-testing", "epel-testing-source",
                "epel-next-testing", "epel-next-testing-source"]
def.testing-only = ["epel-testing", "epel-testing-source",
                    "epel-next-testing", "epel-next-testing-source"]

defs.next-base = ["epel-next", "epel-next-source"]
def.next-testing = ["epel-next", "epel-next-source",
                    "epel-next-testing", "epel-next-testing-source"]
defs.next-testing-only = ["epel-next-testing", "epel-next-testing-source"]


[releases.centos-stream]
matcher = '^c(9|1\d)s'
copr_chroot_fmt = "centos-stream-{version}-{arch}"
defpaths = ["epel.repo", "centos-stream.repo"]
system_repos = false
defs.base = [
    "fedrq-centos-stream-baseos",
    "fedrq-centos-stream-baseos-source",
    "fedrq-centos-stream-appstream",
    "fedrq-centos-stream-appstream-source",
    "fedrq-centos-stream-crb",
    "fedrq-centos-stream-crb-source",
]
defs.epel = [
    # base
    "fedrq-centos-stream-baseos",
    "fedrq-centos-stream-baseos-source",
    "fedrq-centos-stream-appstream",
    "fedrq-centos-stream-appstream-source",
    "fedrq-centos-stream-crb",
    "fedrq-centos-stream-crb-source",
    # epel
    "epel",
    "epel-source",
    "epel-next",
    "epel-next-source"
]
defs.no-crb = [
    "fedrq-centos-stream-baseos",
    "fedrq-centos-stream-baseos-source",
    "fedrq-centos-stream-appstream",
    "fedrq-centos-stream-appstream-source",
]
